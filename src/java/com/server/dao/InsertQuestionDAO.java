/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.server.dao;

import com.server.model.Question;
import com.server.model.Feedback;
import com.server.utils.dbConnection;



import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;

public class InsertQuestionDAO {
    
    private static PreparedStatement stmt = null;
    private static Connection conn = null;
    //private static List<Question> QuestionModel =  new LinkedList<Question>();
    
    
    public static String insertQuestionDB (List<Question> q,Feedback a){
        return insertQuestionDBPerform(q,a);
    }
            
    private static String insertQuestionDBPerform(List<Question> q,Feedback a){
        
        String result = "";
        
        try{
            
            conn=dbConnection.prepConnection();
            
            stmt = conn.prepareStatement("INSERT INTO FEEDBACK (FeedbackDesc,StaffID,Feedbackavail) VALUES (?,?,0)");
            stmt.setString(1, a.getFeedbackDesc());
            stmt.setString(2, a.getStaffID());
            stmt.executeUpdate();
            
            
            int feedbackIDDB =getIDAutoGenerated(a.getStaffID());
            
            if(feedbackIDDB==0){
                result="SQL Error";
            }else{
                
                
                conn=dbConnection.prepConnection();
                
                for(Question b : q){
                
                    stmt = conn.prepareStatement("INSERT INTO QUESTION (QUESTIONDESC,FEEDBACKID) VALUES (?,?)");
                    stmt.setString(1, b.getQuestionDesc());
                    stmt.setInt(2, feedbackIDDB);
                    stmt.executeUpdate();
                    
                }
                
                
            }
            
            
        }catch(Exception e){
            e.printStackTrace();
            
        }
        
        return result;
    } 
    
    
    private static int getIDAutoGenerated (String StaffID){
        
        int id = 0;
        
        try{
            
            conn=dbConnection.prepConnection();
            
            stmt = conn.prepareStatement("SELECT FeedbackID FROM FEEDBACK WHERE StaffID = ? ORDER BY FeedbackID DESC FETCH FIRST 1 ROWS ONLY");
            stmt.setString(1, StaffID);
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
                id=rs.getInt(1);
            }
            
            
            
            
        }catch(Exception e){
            e.printStackTrace();
        }
        return id;
    }
    
    
}
